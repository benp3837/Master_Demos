type Query {
    getAllBooks: [Book]
    numberOfBooks: Int
    bookById(bookId: ID): Book
    booksByAuthorId(authorId: ID): [Book]
    authors: [Author]
    authorById(authorId: ID): Author
}

type Mutation {
    createBook(bookInput: BookInput): Book
    deleteBook(bookId: ID): Book
    updateAuthor(authorInput: AuthorInput): Author
    createAuthor(authorInput: AuthorInput): Author
}

#This input type makes our lives easier. We don't need to define an entire author when sending a new book!
input BookInput {
  bookId: ID
  name: String
  pageCount: Int
  authorId: Int
}

#This is identical to the Author type - so technically not needed...
#but it's good practice to use input types for any and all data input
input AuthorInput {
    authorId: ID
    firstName: String
    lastName: String
}

type Book {
    bookId: ID
    name: String
    pageCount: Int
    author: Author
}

type Author {
    authorId: ID
    firstName: String
    lastName: String
}
